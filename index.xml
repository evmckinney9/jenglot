<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Evan&#39;s Blog</title>
<link>https://blog.evm9.dev/index.html</link>
<atom:link href="https://blog.evm9.dev/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog about quantum computing, programming, and other things.</description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Thu, 19 Oct 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>Second Post</title>
  <dc:creator>Evan McKinney</dc:creator>
  <link>https://blog.evm9.dev/posts/depth/index.html</link>
  <description><![CDATA[ 




<p>Goal is to create a generic quantum noise model, simulate a circuit and show the relationship between circuit depth and fidelity.</p>
<p>Fidelity is defined using.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AF(%5Crho_1,%20%5Crho_2)%20%5C!=%5C!%20%5Ctext%7BTr%7D%5B%5Csqrt%7B%5Csqrt%7B%5Crho_1%7D%5Crho_2%5Csqrt%7B%5Crho_1%7D%7D%5D%5E2%0A"></p>
<p>Approximate as a function of depth, for an <img src="https://latex.codecogs.com/png.latex?N"> qubit circuit with duration <img src="https://latex.codecogs.com/png.latex?D_C">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AF_T%20%5C!=%5C!%20e%5E%7B-N%20%20D_C%20%5Cleft(%20%5Cfrac%7B1%7D%7BT_1%7D%20+%20%5Cfrac%7B1%7D%7BT_2%7D%20%5Cright)%7D%0A"></p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> qiskit.transpiler.coupling <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CouplingMap</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import from Qiskit Aer noise module</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mirror_gates.noisy_fidelity <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> get_noisy_fidelity</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> qiskit.circuit.random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random_circuit</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> qiskit.circuit.library <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> QFT</span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> qiskit.transpiler <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CouplingMap</span>
<span id="cb1-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mirror_gates.noisy_fidelity <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> T1, T2</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># coupling_map = CouplingMap.from_full(N)</span></span>
<span id="cb2-3">coupling_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CouplingMap.from_line(N)</span>
<span id="cb2-4"></span>
<span id="cb2-5">data1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)):</span>
<span id="cb2-8">    qc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random_circuit(N, i, max_operands<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, measure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb2-9">    fid, duration, transp, expected_fid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_noisy_fidelity(qc, coupling_map)</span>
<span id="cb2-10">    data1.append((i, duration, fid))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Added depth (i) here</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>  0%|          | 0/25 [00:00&lt;?, ?it/s]  4%|▍         | 1/25 [00:00&lt;00:15,  1.52it/s]  8%|▊         | 2/25 [00:01&lt;00:19,  1.18it/s] 12%|█▏        | 3/25 [00:02&lt;00:19,  1.15it/s] 16%|█▌        | 4/25 [00:03&lt;00:18,  1.15it/s] 20%|██        | 5/25 [00:04&lt;00:18,  1.09it/s] 24%|██▍       | 6/25 [00:05&lt;00:18,  1.03it/s] 28%|██▊       | 7/25 [00:06&lt;00:18,  1.02s/it] 32%|███▏      | 8/25 [00:07&lt;00:18,  1.08s/it] 36%|███▌      | 9/25 [00:09&lt;00:18,  1.16s/it] 40%|████      | 10/25 [00:10&lt;00:17,  1.20s/it] 44%|████▍     | 11/25 [00:11&lt;00:17,  1.27s/it] 48%|████▊     | 12/25 [00:13&lt;00:17,  1.32s/it] 52%|█████▏    | 13/25 [00:14&lt;00:16,  1.35s/it] 56%|█████▌    | 14/25 [00:16&lt;00:15,  1.40s/it] 60%|██████    | 15/25 [00:17&lt;00:14,  1.45s/it] 64%|██████▍   | 16/25 [00:19&lt;00:13,  1.53s/it] 68%|██████▊   | 17/25 [00:21&lt;00:13,  1.63s/it] 72%|███████▏  | 18/25 [00:23&lt;00:11,  1.67s/it] 76%|███████▌  | 19/25 [00:25&lt;00:10,  1.75s/it] 80%|████████  | 20/25 [00:27&lt;00:09,  1.85s/it] 84%|████████▍ | 21/25 [00:29&lt;00:07,  1.94s/it] 88%|████████▊ | 22/25 [00:31&lt;00:06,  2.11s/it] 92%|█████████▏| 23/25 [00:33&lt;00:04,  2.12s/it] 96%|█████████▌| 24/25 [00:36&lt;00:02,  2.12s/it]100%|██████████| 25/25 [00:38&lt;00:00,  1.54s/it]</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Expected fidelity: 9.60821465974009e-17
Expected fidelity: 6.52779751009869e-10
Expected fidelity: 1.5537993518317284e-07
Expected fidelity: 1.487574536904077e-06
Expected fidelity: 3.291008796328393e-05
Expected fidelity: 4.646880900392177e-05
Expected fidelity: 0.00031885528474234146
Expected fidelity: 0.0009914552912741671
Expected fidelity: 0.002265137938156348
Expected fidelity: 0.00474708453201627
Expected fidelity: 0.005742519985323932
Expected fidelity: 0.012303325377327416
Expected fidelity: 0.014502353992713901
Expected fidelity: 0.01696102593499301
Expected fidelity: 0.030367935062946428
Expected fidelity: 0.044957026811720244
Expected fidelity: 0.04889008093421703
Expected fidelity: 0.08643001927870636
Expected fidelity: 0.09467141196821131
Expected fidelity: 0.14829149077067763
Expected fidelity: 0.1370878899752673
Expected fidelity: 0.1723881232610031
Expected fidelity: 0.16047253150531207
Expected fidelity: 0.22566044135606483
Expected fidelity: 0.19601552561410554</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sort by duration</span></span>
<span id="cb5-2">data1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(data1, key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb5-3">depths_sorted, durations_sorted, fidelities_sorted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>data1)</span>
<span id="cb5-4"></span>
<span id="cb5-5">fig, ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots()</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting the fidelity vs. duration (main line)</span></span>
<span id="cb5-8">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Duration"</span>)</span>
<span id="cb5-9">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fidelity"</span>)</span>
<span id="cb5-10">ax1.plot(durations_sorted, fidelities_sorted, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fidelity"</span>)</span>
<span id="cb5-11"></span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Setting the secondary x-axis for the depth of the random circuit</span></span>
<span id="cb5-13">ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax1.twiny()</span>
<span id="cb5-14">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Depth of Random Circuit"</span>)</span>
<span id="cb5-15">ax2.set_xticks(durations_sorted)</span>
<span id="cb5-16">ax2.set_xticklabels(depths_sorted)</span>
<span id="cb5-17"></span>
<span id="cb5-18">n_qubits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> N</span>
<span id="cb5-19">duration_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(</span>
<span id="cb5-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(durations_sorted), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(durations_sorted), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb5-21">)</span>
<span id="cb5-22">decay_factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> T1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> T2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> duration <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> duration <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> duration_samples]</span>
<span id="cb5-23">single_qubit_fidelity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [np.exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>factor) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> factor <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> decay_factor]</span>
<span id="cb5-24">total_fidelity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [fidelity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>n_qubits <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> fidelity <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> single_qubit_fidelity]</span>
<span id="cb5-25">label_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"$\left( e^{(-D/T_1 -D/T_2)} \right)^</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{N}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">$"</span></span>
<span id="cb5-26"></span>
<span id="cb5-27">ax1.plot(duration_samples, total_fidelity, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label_string, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>)</span>
<span id="cb5-28">ax1.legend()</span>
<span id="cb5-29"></span>
<span id="cb5-30"></span>
<span id="cb5-31">plt.title(</span>
<span id="cb5-32">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random Circuit (8-qubits) Fidelity vs Duration with Circuit Depth Reference"</span></span>
<span id="cb5-33">)</span>
<span id="cb5-34">plt.tight_layout()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust layout to prevent overlap</span></span>
<span id="cb5-35">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://blog.evm9.dev/posts/depth/index_files/figure-html/cell-4-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb6-2">coupling_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CouplingMap.from_full(N)</span>
<span id="cb6-3">data2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)):</span>
<span id="cb6-6">    qc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> QFT(i)</span>
<span id="cb6-7">    fid, duration, transp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_noisy_fidelity(qc, coupling_map)</span>
<span id="cb6-8">    data2.append((i, duration, fid))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>  0%|          | 0/7 [00:00&lt;?, ?it/s]100%|██████████| 7/7 [00:14&lt;00:00,  2.06s/it]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sort by duration</span></span>
<span id="cb8-2">data2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(data2, key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb8-3">sizes_sorted, durations_sorted, fidelities_sorted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>data2)</span>
<span id="cb8-4">fig, ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots()</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting the fidelity vs. duration (main line)</span></span>
<span id="cb8-7">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Duration"</span>)</span>
<span id="cb8-8">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fidelity"</span>)</span>
<span id="cb8-9">ax1.plot(durations_sorted, fidelities_sorted, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fidelity"</span>)</span>
<span id="cb8-10">ax1.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)</span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Setting the secondary x-axis for the size of QFT</span></span>
<span id="cb8-13">ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax1.twiny()</span>
<span id="cb8-14">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Size of QFT"</span>)</span>
<span id="cb8-15">ax2.set_xticks(durations_sorted)</span>
<span id="cb8-16">ax2.set_xticklabels(sizes_sorted)</span>
<span id="cb8-17">ax2.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span>
<span id="cb8-18"></span>
<span id="cb8-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjusting the reference line calculation</span></span>
<span id="cb8-20">unique_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(sizes_sorted))</span>
<span id="cb8-21">reference_y_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-22">duration_samples_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-23"></span>
<span id="cb8-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> size <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> unique_sizes:</span>
<span id="cb8-25">    min_duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(</span>
<span id="cb8-26">        [</span>
<span id="cb8-27">            duration</span>
<span id="cb8-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> size_curr, duration <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(sizes_sorted, durations_sorted)</span>
<span id="cb8-29">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> size_curr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> size</span>
<span id="cb8-30">        ]</span>
<span id="cb8-31">    )</span>
<span id="cb8-32">    max_duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(</span>
<span id="cb8-33">        [</span>
<span id="cb8-34">            duration</span>
<span id="cb8-35">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> size_curr, duration <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(sizes_sorted, durations_sorted)</span>
<span id="cb8-36">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> size_curr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> size</span>
<span id="cb8-37">        ]</span>
<span id="cb8-38">    )</span>
<span id="cb8-39">    duration_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(min_duration, max_duration, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-40">    reference_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb8-41">        np.exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (T1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T2)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> duration <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> duration_samples</span>
<span id="cb8-42">    ]</span>
<span id="cb8-43"></span>
<span id="cb8-44">    reference_y_total.extend(reference_y)</span>
<span id="cb8-45">    duration_samples_total.extend(duration_samples)</span>
<span id="cb8-46"></span>
<span id="cb8-47">ax1.plot(</span>
<span id="cb8-48">    duration_samples_total,</span>
<span id="cb8-49">    reference_y_total,</span>
<span id="cb8-50">    label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e^{-nD / (T_1+T_2)}"</span>,</span>
<span id="cb8-51">    linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>,</span>
<span id="cb8-52">)</span>
<span id="cb8-53"></span>
<span id="cb8-54"></span>
<span id="cb8-55">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n-QFT Fidelity vs Duration with QFT Size Reference"</span>)</span>
<span id="cb8-56">plt.tight_layout()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust layout to prevent overlap</span></span>
<span id="cb8-57">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://blog.evm9.dev/posts/depth/index_files/figure-html/cell-6-output-1.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <category>jupyter</category>
  <category>Qiskit</category>
  <guid>https://blog.evm9.dev/posts/depth/index.html</guid>
  <pubDate>Thu, 19 Oct 2023 00:00:00 GMT</pubDate>
  <media:content url="https://blog.evm9.dev/posts/depth/figures/cover.png" medium="image" type="image/png" height="103" width="144"/>
</item>
</channel>
</rss>
